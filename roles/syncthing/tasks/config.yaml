---
- name: Generate Syncthing config (Linux)
  become: true
  become_user: "{{ syncthing_user }}"
  changed_when: false
  when: ansible_system == "Linux"
  ansible.builtin.shell:
    cmd: >-
      rm -rf $HOME/.local/state/syncthing &&
      syncthing generate --no-default-folder --gui-user={{ syncthing_gui_user }} --gui-password={{ syncthing_gui_password }}

- name: Generate Syncthing config (Windows)
  become: true
  become_user: "{{ syncthing_user }}"
  changed_when: false
  when: ansible_system == "Win32NT"
  ansible.windows.win_shell: |
    $installPath = "$env:LOCALAPPDATA\Programs\Syncthing"
    $configPath = "$env:LOCALAPPDATA\Syncthing"

    if (Test-Path -Path $configPath) {
        Remove-Item -Path $configPath -Recurse -Force
    }

    New-Item -ItemType Directory -Path $configPath -Force | Out-Null

    & "$installPath\syncthing.exe" generate --no-default-folder --gui-user={{ syncthing_gui_user }} --gui-password={{ syncthing_gui_password }}

- name: Fetch Syncthing config (Linux)
  become: true
  become_user: "{{ syncthing_user }}"
  register: syncthing_config_linux_slurped
  when: ansible_system == "Linux"
  ansible.builtin.slurp:
    src: $HOME/.local/state/syncthing/config.xml

- name: Fetch Syncthing config (Windows)
  become: true
  become_user: "{{ syncthing_user }}"
  register: syncthing_config_windows_slurped
  when: ansible_system == "Win32NT"
  ansible.windows.slurp:
    src: "%LOCALAPPDATA%\\Syncthing\\config.xml"

- name: Decode Syncthing config content
  ansible.builtin.set_fact:
    syncthing_config_original: >-
      {{ 
        syncthing_config_linux_slurped.content | default(syncthing_config_windows_slurped.content)
        | ansible.builtin.b64decode
        | ansible.utils.from_xml
      }}

- name: Create new Syncthing device config
  ansible.builtin.set_fact:
    syncthing_config_device: >-
      {{
        {
          'device': syncthing_config_original.configuration.device
            | combine({ 'autoAcceptFolders': 'false' })
        }
      }}

- name: Combine all Syncthing device configs
  run_once: true
  ansible.builtin.set_fact:
    syncthing_combined_config_device: >-
      {{
        {
          'device': ansible_play_hosts_all
            | map('extract', hostvars)
            | selectattr('syncthing_config_device', 'defined')
            | map(attribute='syncthing_config_device.device')
            | list 
        }
      }}

- name: Transform combined device config for folder device
  run_once: true
  loop: "{{ syncthing_combined_config_device.device }}"
  loop_control:
    label: "{{ item['@name'] }}"
  ansible.builtin.set_fact:
    syncthing_combined_config_folder_device: >-
      {{
        {
          'device': syncthing_combined_config_folder_device.device | default([]) + [
            {
              '@id': item['@id'],
              '@introducedBy': item['@introducedBy'] | default(''),
              'encryptionPassword': None 
            }
          ]
        }
      }}

- name: Create new Syncthing folder config
  loop: "{{ syncthing_folders }}"
  loop_control:
    label: "{{ item.id }}"
  ansible.builtin.set_fact:
    syncthing_config_folder: >-
      {{
        {
          'folder': syncthing_config_folder.folder | default([]) + [
            syncthing_config_original.configuration.defaults.folder
            | combine({ '@id': item.id, '@path': item.path, '@type': item.type })
            | combine(syncthing_combined_config_folder_device, recursive=True)
          ]
        }
      }}

- name: Merge all into final Syncthing config
  ansible.builtin.set_fact:
    syncthing_config_updated: >-
      {{
        syncthing_config_original
        | combine({ 'configuration': syncthing_config_original.configuration
          | combine(syncthing_combined_config_device)
          | combine(syncthing_config_folder)
          | combine({
            'gui': {
              'address': syncthing_gui_address,
            },
            'options': {
              'crashReportingEnabled': 'false',
              'urAccepted': '-1'
            }
          }, recursive=True)
        })
      }}

- name: Write final Syncthing config (Linux)
  become: true
  become_user: "{{ syncthing_user }}"
  when: ansible_system == "Linux"
  ansible.builtin.copy:
    content: "{{ syncthing_config_updated | ansible.utils.to_xml(indent='spaces', full_document=False) }}"
    dest: $HOME/.local/state/syncthing/config.xml
    mode: "0600"

- name: Write final Syncthing config (Windows)
  become: true
  become_user: "{{ syncthing_user }}"
  when: ansible_system == "Win32NT"
  ansible.windows.win_copy:
    content: "{{ syncthing_config_updated | ansible.utils.to_xml(indent='spaces', full_document=False) }}"
    dest: "%LOCALAPPDATA%\\Syncthing\\config.xml"
    force: true

- name: Start Syncthing service (systemd)
  become: true
  when:
    - ansible_system == "Linux"
    - ansible_service_mgr == "systemd"
  ansible.builtin.systemd_service:
    name: "syncthing@{{ syncthing_user }}"
    state: restarted
    daemon_reload: true
    masked: false
    enabled: true

- name: Waiting Syncthing service to be ready
  when:
    - ansible_system == "Linux"
    - ansible_service_mgr == "systemd"
  ansible.builtin.pause:
    seconds: 30

- name: Restart Syncthing
  become: true
  when:
    - ansible_system == "Linux"
    - ansible_service_mgr == "systemd"
  ansible.builtin.systemd:
    name: syncthing@{{ syncthing_user }}
    state: restarted

- name: Start Syncthing service (Windows)
  become: true
  when: ansible_system == "Win32NT"
  ansible.windows.win_service:
    name: syncthing
    state: restarted
